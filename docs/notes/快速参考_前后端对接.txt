╔══════════════════════════════════════════════════════════════════╗
║                  🚀 前后端对接 - 快速参考卡片                      ║
╚══════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────┐
│ 📍 服务器配置                                                     │
├──────────────────────────────────────────────────────────────────┤
│ 后端地址: http://localhost:8888                                  │
│ 前端地址: http://localhost:3000                                  │
│ API密钥:  test_api_key                                           │
└──────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────┐
│ 🔧 启动步骤                                                       │
├──────────────────────────────────────────────────────────────────┤
│ 1. 启动后端:                                                     │
│    cd Rust-Blockchain-Secure-Wallet                             │
│    ./start_backend.sh                                            │
│                                                                  │
│ 2. 验证后端:                                                     │
│    ./verify_api_alignment.sh                                    │
│                                                                  │
│ 3. 启动前端:                                                     │
│    cd blockchain-wallet-ui                                      │
│    npm start                                                     │
└──────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────┐
│ 📋 API端点速查                                                    │
├──────────────────────────────────────────────────────────────────┤
│ 健康检查:   GET  /api/health                                     │
│ 钱包列表:   GET  /api/wallets                                    │
│ 创建钱包:   POST /api/wallets                                    │
│ 删除钱包:   DEL  /api/wallets/:name                              │
│ 查询余额:   GET  /api/wallets/:name/balance?network=eth         │
│ 发送交易:   POST /api/wallets/:name/send                         │
│ 交易历史:   GET  /api/wallets/:name/history                      │
│ 跨链桥接:   POST /api/bridge                                     │
└──────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────┐
│ 🔐 认证配置                                                       │
├──────────────────────────────────────────────────────────────────┤
│ 请求头:                                                          │
│   Authorization: test_api_key                                   │
│   Content-Type: application/json                                │
│                                                                  │
│ 动态API Key (开发环境):                                          │
│   localStorage.setItem('api_key', 'your_key');                  │
└──────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────┐
│ 🌐 支持的网络                                                     │
├──────────────────────────────────────────────────────────────────┤
│ • eth          - 以太坊主网 (默认)                               │
│ • sepolia      - 以太坊测试网                                    │
│ • polygon      - Polygon网络                                     │
│ • bsc          - Binance Smart Chain                            │
│ • solana       - Solana主网                                      │
│ • solana-devnet- Solana测试网                                    │
└──────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────┐
│ ⚠️  常见状态码                                                    │
├──────────────────────────────────────────────────────────────────┤
│ 200 OK              - 成功                                       │
│ 201 Created         - 创建成功                                   │
│ 204 No Content      - 删除成功                                   │
│ 400 Bad Request     - 参数错误                                   │
│ 401 Unauthorized    - 认证失败                                   │
│ 404 Not Found       - 资源不存在                                 │
│ 429 Too Many Req.   - 速率限制                                   │
│ 500 Internal Error  - 服务器错误                                 │
│ 503 Service Unavail - 服务不可用                                 │
└──────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────┐
│ 📝 前端示例代码                                                   │
├──────────────────────────────────────────────────────────────────┤
│ // 创建钱包                                                      │
│ const wallet = await walletService.createWallet({               │
│   name: 'my_wallet',                                            │
│   quantum_safe: false                                           │
│ });                                                              │
│                                                                  │
│ // 查询余额 (默认eth)                                            │
│ const balance = await walletService.getBalance('my_wallet');    │
│                                                                  │
│ // 查询余额 (指定网络)                                           │
│ const solBalance = await walletService.getBalance(              │
│   'my_wallet',                                                  │
│   'solana'                                                      │
│ );                                                               │
│                                                                  │
│ // 发送交易                                                      │
│ const tx = await walletService.sendTransaction(                 │
│   'my_wallet',                                                  │
│   {                                                              │
│     to_address: '0x...',                                        │
│     amount: '1.0',                                              │
│     network: 'eth'  // 可选，默认eth                            │
│   }                                                              │
│ );                                                               │
└──────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────┐
│ 🔍 问题排查                                                       │
├──────────────────────────────────────────────────────────────────┤
│ ERR_CONNECTION_REFUSED                                          │
│ → 检查后端是否启动 (./start_backend.sh)                         │
│                                                                  │
│ CORS Error                                                       │
│ → 确认前端在 localhost:3000                                     │
│ → 检查后端CORS配置                                              │
│                                                                  │
│ 401 Unauthorized                                                │
│ → 检查 Authorization 头                                         │
│ → 验证 API Key = test_api_key                                   │
│                                                                  │
│ 400 Unsupported network                                         │
│ → 使用支持的网络名称                                            │
│ → 检查拼写是否正确                                              │
│                                                                  │
│ 429 Rate Limit                                                  │
│ → 降低请求频率                                                  │
│ → 实现指数退避重试                                              │
└──────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────┐
│ 📚 文档链接                                                       │
├──────────────────────────────────────────────────────────────────┤
│ • 前后端API对接文档.md     - 完整API规范                         │
│ • 前端集成测试指南.md       - 测试用例和示例                      │
│ • verify_api_alignment.sh  - 后端验证脚本                        │
│ • start_backend.sh         - 后端启动脚本                        │
└──────────────────────────────────────────────────────────────────┘

╔══════════════════════════════════════════════════════════════════╗
║  ✅ 前后端配置已完全对齐，可以开始联调！                          ║
╚══════════════════════════════════════════════════════════════════╝

版本: v1.0 | 更新: 2025-10-24 | 状态: ✅ 就绪

