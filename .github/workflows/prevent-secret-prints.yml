name: Prevent secret prints

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scan for forbidden print macros and insecure placeholders
        shell: bash
        run: |
          set -euo pipefail
          echo "Scanning repo for forbidden patterns (println!, eprintln!, dbg!, hex::encode, WALLET_ENC_KEY, TEST_SKIP_DECRYPT, BRIDGE_MOCK_*)"
          # Only scan tracked Rust files under src/, but exclude src/bin (user-facing CLIs)
          # and test files / helper modules which intentionally use debug/hex in tests or tooling.
          files=$(git ls-files 'src/**/*.rs' \
            | grep -v '^src/bin/' \
            | grep -v '^src/test_env.rs' \
            | grep -v '\/tests?\.' \
            | grep -v '\/tests\/' \
            | grep -v '\b_test.rs$' \
            | grep -v '^src/tools/' \
            | grep -v '^src/blockchain/bridge/' \
            | grep -v '^src/api/bridge_' \
            | grep -v '^src/api/.*_tests.rs' \
            || true)
          if [ -z "${files}" ]; then
            echo "No src files to scan."
            exit 0
          fi
          # Patterns to disallow in non-test source files
          pattern='println!|eprintln!|\bdbg!\(|hex::encode\(|WALLET_ENC_KEY|TEST_SKIP_DECRYPT|BRIDGE_MOCK_'
          if grep -nE --color=always "${pattern}" ${files}; then
            echo "\nForbidden patterns found in non-test source files. Please remove or move to test-only code."
            exit 1
          fi
          echo "No forbidden patterns detected."
