name: Secret return lint

on:
  push:
    branches: [ main, master, archive-bridge-stub ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run secret-return grep lint
        run: |
          set -euo pipefail
          echo "Searching for public function signatures that return raw secret types..."
          # Exclude common generated/patch directories to cut false positives
          EXCLUDES=(--exclude-dir=target --exclude-dir=defi-target --exclude-dir=target_test_cli_smoke --exclude-dir=patches --exclude-dir=.git --exclude-dir=vendor)
          # Search for `pub fn` returning `String` or `Vec<u8>` where function name contains secret keywords
          grep -RIn "${EXCLUDES[@]}" --include=*.rs -E "pub\\s+fn\\s+\\w*(mnemonic|master|private|seed|key)\\w*\\([^\\)]*\\)\\s*->\\s*(String|Vec<\\s*u8\\s*>)" . || true
          # If any matches found, check allowlist
          matches=$(grep -RIn "${EXCLUDES[@]}" --include=*.rs -E "pub\\s+fn\\s+\\w*(mnemonic|master|private|seed|key)\\w*\\([^\\)]*\\)\\s*->\\s*(String|Vec<\\s*u8\\s*>)" . || true)
          if [ -z "$matches" ]; then
            echo "No problematic public secret-returning signatures found."
            exit 0
          fi
          echo "Found potential secret-returning functions:" >&2
          echo "$matches" >&2
          # Allowlist file contains paths or function names that are allowed
          ALLOWFILE=.ci/secret_allowlist.txt
          if [ -f "$ALLOWFILE" ]; then
            echo "Applying allowlist..."
            # Remove allowlisted lines from matches
            filtered=$(echo "$matches" | grep -v -f "$ALLOWFILE" || true)
            if [ -z "$filtered" ]; then
              echo "All matches are allowlisted. Lint passes.";
              exit 0
            fi
            echo "Non-allowlisted matches remain:" >&2
            echo "$filtered" >&2
            exit 1
          else
            echo "No allowlist present; failing for visibility." >&2
            exit 1
          fi
