name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  WALLET_ENC_KEY: "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="
  TEST_SKIP_DECRYPT: "1"
  BRIDGE_MOCK_FORCE_SUCCESS: "1"
  BRIDGE_MOCK: "1"
  CARGO_TERM_COLOR: always
  DATABASE_URL: sqlite://./wallets.db

jobs:
  format-check:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - name: Check code formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  pre-commit-check:
    name: Pre-commit Checks
    runs-on: ubuntu-latest
    needs: format-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Generate project report
        run: |
          echo "# Project Structure Report" > project_report.md
          echo "## Rust files count" >> project_report.md
          find . -type f -name "*.rs" | wc -l | xargs -I{} echo "- Rust files: {}" >> project_report.md
          echo "## Core modules" >> project_report.md
          find ./src -type f -name "*.rs" | sort >> project_report.md
      - name: Upload project report
        uses: actions/upload-artifact@v4
        with:
          name: project-report
          path: project_report.md

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: pre-commit-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt,cargo
      - name: Fetch dependencies
        run: cargo fetch
      - name: Run tests (with explicit env)
        run: |
          BRIDGE_MOCK_FORCE_SUCCESS=1 BRIDGE_MOCK=1 DATABASE_URL=sqlite://./wallets.db \
          cargo test --all --lib -- --nocapture
      - name: Upload test results (placeholder)
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: .