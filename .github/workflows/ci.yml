---
name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  HTTP_PROXY: ""
  HTTPS_PROXY: ""
  http_proxy: ""
  https_proxy: ""
  NO_PROXY: index.crates.io,crates.io,github.com
  no_proxy: index.crates.io,crates.io,github.com

jobs:
  test:
    name: Test (${{ matrix.rust }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clear proxy env (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          unset HTTP_PROXY || true
          unset HTTPS_PROXY || true
          unset http_proxy || true
          unset https_proxy || true
          echo "NO_PROXY=index.crates.io,crates.io,github.com" >> "$GITHUB_ENV"
          echo "no_proxy=index.crates.io,crates.io,github.com" >> "$GITHUB_ENV"

      - name: Clear proxy env (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Remove-Item Env:HTTP_PROXY -ErrorAction SilentlyContinue
          Remove-Item Env:HTTPS_PROXY -ErrorAction SilentlyContinue
          Remove-Item Env:http_proxy -ErrorAction SilentlyContinue
          Remove-Item Env:https_proxy -ErrorAction SilentlyContinue
          Add-Content -Path $env:GITHUB_ENV `
            -Value "NO_PROXY=index.crates.io,crates.io,github.com"
          Add-Content -Path $env:GITHUB_ENV `
            -Value "no_proxy=index.crates.io,crates.io,github.com"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Cache cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.rust }}

      - run: cargo fetch
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-targets -- -D warnings
      - run: cargo build --verbose
      - run: cargo test --verbose

  build:
    name: Build Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clear proxy env (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          unset HTTP_PROXY || true
          unset HTTPS_PROXY || true
          unset http_proxy || true
          unset https_proxy || true
          echo "NO_PROXY=index.crates.io,crates.io,github.com" >> "$GITHUB_ENV"
          echo "no_proxy=index.crates.io,crates.io,github.com" >> "$GITHUB_ENV"

      - name: Clear proxy env (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Remove-Item Env:HTTP_PROXY -ErrorAction SilentlyContinue
          Remove-Item Env:HTTPS_PROXY -ErrorAction SilentlyContinue
          Remove-Item Env:http_proxy -ErrorAction SilentlyContinue
          Remove-Item Env:https_proxy -ErrorAction SilentlyContinue
          Add-Content -Path $env:GITHUB_ENV `
            -Value "NO_PROXY=index.crates.io,crates.io,github.com"
          Add-Content -Path $env:GITHUB_ENV `
            -Value "no_proxy=index.crates.io,crates.io,github.com"

      - name: Install Rust toolchain (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      - name: Cache cargo (build job)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-build

      - run: cargo build --release --verbose